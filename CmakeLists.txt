cmake_minimum_required(VERSION 3.12)
project(AnalogClock)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_EXTENSIONS OFF)

# pkg-config --cflags --libs opencv4 # to lisk all the linkable libraries
add_compile_definitions(HAVE_OPENMP)
include_directories("~/local/include/opencv4")
link_directories("~/local/lib")

add_library(algorithm SHARED "algorithm.cpp")
target_link_libraries(algorithm opencv_core opencv_highgui opencv_imgproc)
set_target_properties(algorithm PROPERTIES XCODE_GENERATE_SCHEME TRUE)

add_executable(main "main.cpp")
target_link_libraries(main opencv_core opencv_imgcodecs opencv_imgproc)
add_dependencies(main algorithm)
# Can I use set_property to do this globally?
set_target_properties(main PROPERTIES XCODE_GENERATE_SCHEME TRUE
    XCODE_SCHEME_WORKING_DIRECTORY ${PROJECT_SOURCE_DIR})

add_executable(mat_allocator "mat_allocator.cpp")
target_link_libraries(mat_allocator opencv_core)
set_target_properties(mat_allocator PROPERTIES XCODE_GENERATE_SCHEME TRUE)

add_executable(blob blob.cpp)
target_link_libraries(blob opencv_core opencv_imgcodecs opencv_highgui
	opencv_imgproc opencv_features2d)
set_target_properties(blob PROPERTIES XCODE_GENERATE_SCHEME TRUE
	    XCODE_SCHEME_WORKING_DIRECTORY ${PROJECT_SOURCE_DIR})

add_custom_target(README SOURCES README.md)

# (lldb) command alias compile platform shell build.sh
# (lldb) compile
# (lldb) target create main
# (lldb) run
# (lldb) p (* (cv::Exception *) $arg1).msg
